on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*' # We don't want this to run on release

name: Build

jobs:
  build:
    name: Build (React)
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Packages
      run: cd site && npm ci

    - name: Build
      run: cd site && npm run build --production
      
    - uses: actions/upload-artifact@v2
      with:
        name: site-content
        path: site/build/

  build_crawler:
    name: Build (Crawler)
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Packages
      run: cd crawler && npm ci

    - name: Build
      run: cd crawler && npm run build --production
      
    - uses: actions/upload-artifact@v2
      with:
        name: crawler-content
        path: crawler/build/

  plan:
    name: Plan
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      id: fmt
      run: terraform -chdir=terraform/ fmt -check
      continue-on-error: true

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Terraform Init
      id: init
      run: terraform -chdir=terraform/ init

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=terraform/ validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform -chdir=terraform/ plan -no-color -out=plan.tfplan
      continue-on-error: true
    
    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üé®\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
